pipeline {
    agent any
    environment {
        RELEASE = '20.04'
    }
    stages {
        stage('Build') {
            environment {
                LOG_LEVEL = 'INFO'
            }
            steps {
                echo "Building release ${RELEASE} with log level ${LOG_LEVEL}..."
            }
        }
        stage('Test') {
            steps {
                echo "Testing release ${RELEASE}"
                script {
                    def rand = Math.random();
                    echo "Random Number ${rand}"
                    if (rand > 0.5) {
                        throw new Exception()
                    }
                }
                writeFile file: 'test-results.txt', text: 'passed'
                withCredentials([string(credentialsId: 'slack-token', variable: 'API_KEY')]) {
                    echo "Using key ${API_KEY}"
                }
            }
        }
    }
    post {
        success {
            archiveArtifacts 'test-results.txt'
            sh 'echo "printing random number ${rand}"'
            slackSend channel: '#update',
                    color: 'good',
                    message: "Release ${env.RELEASE}, success: ${currentBuild.fullDisplayName}."
        }
        failure {
            slackSend channel: '#update',
                    color: 'danger',
                    message: "Release ${env.RELEASE}, success: ${currentBuild.fullDisplayName}."
        }
    }
}
